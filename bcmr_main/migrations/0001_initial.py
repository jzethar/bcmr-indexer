# Generated by Django 3.1.6 on 2023-06-13 06:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockScan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(default=1)),
                ('transactions', models.IntegerField(default=0)),
                ('scan_started', models.DateTimeField(null=True)),
                ('scan_completed', models.DateTimeField(null=True)),
                ('scanned', models.BooleanField(db_index=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='IdentityOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=70, unique=True)),
                ('block', models.PositiveIntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('authbase', models.BooleanField(default=False)),
                ('genesis', models.BooleanField(default=False)),
                ('spent', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Identity Outputs',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('txid', models.CharField(max_length=70, unique=True)),
                ('index', models.IntegerField(null=True)),
                ('date_acquired', models.DateTimeField(blank=True, null=True)),
                ('spent', models.BooleanField(default=False)),
                ('spender', models.CharField(max_length=70, null=True)),
                ('burned', models.BooleanField(default=False)),
                ('burner', models.CharField(max_length=70, null=True)),
            ],
            options={
                'ordering': ('-date_acquired',),
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=70)),
                ('index', models.IntegerField()),
                ('contents', models.JSONField(blank=True, null=True)),
                ('valid', models.BooleanField(default=False)),
                ('op_return', models.TextField(default='')),
                ('bcmr_url', models.TextField(default='')),
                ('bcmr_request_status', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Registries',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=70)),
                ('debut_txid', models.CharField(blank=True, max_length=70, null=True)),
                ('is_nft', models.BooleanField(default=False)),
                ('commitment', models.CharField(blank=True, max_length=255, null=True)),
                ('capability', models.CharField(blank=True, choices=[('minting', 'Minting'), ('mutable', 'Mutable'), ('none', 'None')], max_length=20, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='TokenMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.JSONField(blank=True, null=True)),
                ('date_created', models.DateTimeField(null=True)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens_created', to='bcmr_main.identityoutput')),
                ('registry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='token_metadata', to='bcmr_main.registry')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='bcmr_main.token')),
            ],
        ),
        migrations.AddIndex(
            model_name='token',
            index=models.Index(fields=['category', 'commitment', 'capability', 'is_nft'], name='bcmr_main_t_categor_980116_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='token',
            unique_together={('category', 'commitment', 'capability')},
        ),
        migrations.AddField(
            model_name='registry',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registries', to='bcmr_main.identityoutput'),
        ),
        migrations.AddField(
            model_name='ownership',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_history', to='bcmr_main.token'),
        ),
        migrations.AddField(
            model_name='identityoutput',
            name='spender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='bcmr_main.identityoutput'),
        ),
        migrations.AddIndex(
            model_name='registry',
            index=models.Index(fields=['txid', 'index', 'valid'], name='bcmr_main_r_txid_ccbdd5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='registry',
            unique_together={('txid', 'index', 'publisher')},
        ),
        migrations.AddIndex(
            model_name='ownership',
            index=models.Index(fields=['address', 'spent', 'burned'], name='bcmr_main_o_address_a7530f_idx'),
        ),
        migrations.AddIndex(
            model_name='identityoutput',
            index=models.Index(fields=['txid', 'spent'], name='bcmr_main_i_txid_1a4f55_idx'),
        ),
    ]
